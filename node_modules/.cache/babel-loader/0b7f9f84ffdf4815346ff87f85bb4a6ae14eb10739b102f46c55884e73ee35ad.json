{"ast":null,"code":"import _slicedToArray from \"C:/Users/Prajwal/Desktop/crypto-dashboard-dec/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport areArraysEqual from '../utils/areArraysEqual';\n\n/**\n * Gets the current state. If the selectedValue is controlled,\n * the `value` prop is the source of truth instead of the internal state.\n */\nfunction getControlledState(internalState, props) {\n  if (props.value !== undefined) {\n    return _extends({}, internalState, {\n      selectedValue: props.value\n    });\n  }\n  return internalState;\n}\nfunction areOptionsEqual(option1, option2, optionComparer) {\n  if (option1 === option2) {\n    return true;\n  }\n  if (option1 === null || option2 === null) {\n    return false;\n  }\n  return optionComparer(option1, option2);\n}\n\n/**\n * Triggers change event handlers when reducer returns changed state.\n */\nfunction useStateChangeDetection(nextState, internalPreviousState, propsRef, lastActionRef) {\n  React.useEffect(function () {\n    if (!propsRef.current || lastActionRef.current === null) {\n      // Detect changes only if an action has been dispatched.\n      return;\n    }\n    var previousState = getControlledState(internalPreviousState, propsRef.current);\n    var _propsRef$current2 = propsRef.current,\n      multiple = _propsRef$current2.multiple,\n      optionComparer = _propsRef$current2.optionComparer;\n    if (multiple) {\n      var _previousState$select;\n      var previousSelectedValues = (_previousState$select = previousState == null ? void 0 : previousState.selectedValue) != null ? _previousState$select : [];\n      var nextSelectedValues = nextState.selectedValue;\n      var onChange = propsRef.current.onChange;\n      if (!areArraysEqual(nextSelectedValues, previousSelectedValues, optionComparer)) {\n        onChange == null ? void 0 : onChange(lastActionRef.current.event, nextSelectedValues);\n      }\n    } else {\n      var previousSelectedValue = previousState == null ? void 0 : previousState.selectedValue;\n      var nextSelectedValue = nextState.selectedValue;\n      var _onChange = propsRef.current.onChange;\n      if (!areOptionsEqual(nextSelectedValue, previousSelectedValue, optionComparer)) {\n        _onChange == null ? void 0 : _onChange(lastActionRef.current.event, nextSelectedValue);\n      }\n    }\n\n    // Fires the highlightChange event when reducer returns changed `highlightedValue`.\n    if (!areOptionsEqual(internalPreviousState.highlightedValue, nextState.highlightedValue, propsRef.current.optionComparer)) {\n      var _propsRef$current, _propsRef$current$onH;\n      (_propsRef$current = propsRef.current) == null ? void 0 : (_propsRef$current$onH = _propsRef$current.onHighlightChange) == null ? void 0 : _propsRef$current$onH.call(_propsRef$current, lastActionRef.current.event, nextState.highlightedValue);\n    }\n    lastActionRef.current = null;\n  }, [nextState.selectedValue, nextState.highlightedValue, internalPreviousState, propsRef, lastActionRef]);\n}\nexport default function useControllableReducer(internalReducer, externalReducer, props) {\n  var _ref;\n  var value = props.value,\n    defaultValue = props.defaultValue;\n  var propsRef = React.useRef(props);\n  propsRef.current = props;\n  var actionRef = React.useRef(null);\n  var initialSelectedValue = (_ref = value === undefined ? defaultValue : value) != null ? _ref : props.multiple ? [] : null;\n  var initalState = {\n    highlightedValue: null,\n    selectedValue: initialSelectedValue\n  };\n  var combinedReducer = React.useCallback(function (state, action) {\n    actionRef.current = action;\n    if (externalReducer) {\n      return externalReducer(getControlledState(state, propsRef.current), action);\n    }\n    return internalReducer(getControlledState(state, propsRef.current), action);\n  }, [externalReducer, internalReducer, propsRef]);\n  var _React$useReducer = React.useReducer(combinedReducer, initalState),\n    _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n    nextState = _React$useReducer2[0],\n    dispatch = _React$useReducer2[1];\n  var previousState = React.useRef(initalState);\n  React.useEffect(function () {\n    previousState.current = nextState;\n  }, [previousState, nextState]);\n  useStateChangeDetection(nextState, previousState.current, propsRef, actionRef);\n  return [getControlledState(nextState, propsRef.current), dispatch];\n}","map":{"version":3,"names":["_extends","React","areArraysEqual","getControlledState","internalState","props","value","undefined","selectedValue","areOptionsEqual","option1","option2","optionComparer","useStateChangeDetection","nextState","internalPreviousState","propsRef","lastActionRef","useEffect","current","previousState","_propsRef$current2","multiple","_previousState$select","previousSelectedValues","nextSelectedValues","onChange","event","previousSelectedValue","nextSelectedValue","highlightedValue","_propsRef$current","_propsRef$current$onH","onHighlightChange","call","useControllableReducer","internalReducer","externalReducer","_ref","defaultValue","useRef","actionRef","initialSelectedValue","initalState","combinedReducer","useCallback","state","action","_React$useReducer","useReducer","_React$useReducer2","_slicedToArray","dispatch"],"sources":["C:/Users/Prajwal/Desktop/crypto-dashboard-dec/node_modules/@mui/base/ListboxUnstyled/useControllableReducer.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport areArraysEqual from '../utils/areArraysEqual';\n\n/**\n * Gets the current state. If the selectedValue is controlled,\n * the `value` prop is the source of truth instead of the internal state.\n */\nfunction getControlledState(internalState, props) {\n  if (props.value !== undefined) {\n    return _extends({}, internalState, {\n      selectedValue: props.value\n    });\n  }\n  return internalState;\n}\nfunction areOptionsEqual(option1, option2, optionComparer) {\n  if (option1 === option2) {\n    return true;\n  }\n  if (option1 === null || option2 === null) {\n    return false;\n  }\n  return optionComparer(option1, option2);\n}\n\n/**\n * Triggers change event handlers when reducer returns changed state.\n */\nfunction useStateChangeDetection(nextState, internalPreviousState, propsRef, lastActionRef) {\n  React.useEffect(() => {\n    if (!propsRef.current || lastActionRef.current === null) {\n      // Detect changes only if an action has been dispatched.\n      return;\n    }\n    const previousState = getControlledState(internalPreviousState, propsRef.current);\n    const {\n      multiple,\n      optionComparer\n    } = propsRef.current;\n    if (multiple) {\n      var _previousState$select;\n      const previousSelectedValues = (_previousState$select = previousState == null ? void 0 : previousState.selectedValue) != null ? _previousState$select : [];\n      const nextSelectedValues = nextState.selectedValue;\n      const onChange = propsRef.current.onChange;\n      if (!areArraysEqual(nextSelectedValues, previousSelectedValues, optionComparer)) {\n        onChange == null ? void 0 : onChange(lastActionRef.current.event, nextSelectedValues);\n      }\n    } else {\n      const previousSelectedValue = previousState == null ? void 0 : previousState.selectedValue;\n      const nextSelectedValue = nextState.selectedValue;\n      const onChange = propsRef.current.onChange;\n      if (!areOptionsEqual(nextSelectedValue, previousSelectedValue, optionComparer)) {\n        onChange == null ? void 0 : onChange(lastActionRef.current.event, nextSelectedValue);\n      }\n    }\n\n    // Fires the highlightChange event when reducer returns changed `highlightedValue`.\n    if (!areOptionsEqual(internalPreviousState.highlightedValue, nextState.highlightedValue, propsRef.current.optionComparer)) {\n      var _propsRef$current, _propsRef$current$onH;\n      (_propsRef$current = propsRef.current) == null ? void 0 : (_propsRef$current$onH = _propsRef$current.onHighlightChange) == null ? void 0 : _propsRef$current$onH.call(_propsRef$current, lastActionRef.current.event, nextState.highlightedValue);\n    }\n    lastActionRef.current = null;\n  }, [nextState.selectedValue, nextState.highlightedValue, internalPreviousState, propsRef, lastActionRef]);\n}\nexport default function useControllableReducer(internalReducer, externalReducer, props) {\n  var _ref;\n  const {\n    value,\n    defaultValue\n  } = props;\n  const propsRef = React.useRef(props);\n  propsRef.current = props;\n  const actionRef = React.useRef(null);\n  const initialSelectedValue = (_ref = value === undefined ? defaultValue : value) != null ? _ref : props.multiple ? [] : null;\n  const initalState = {\n    highlightedValue: null,\n    selectedValue: initialSelectedValue\n  };\n  const combinedReducer = React.useCallback((state, action) => {\n    actionRef.current = action;\n    if (externalReducer) {\n      return externalReducer(getControlledState(state, propsRef.current), action);\n    }\n    return internalReducer(getControlledState(state, propsRef.current), action);\n  }, [externalReducer, internalReducer, propsRef]);\n  const [nextState, dispatch] = React.useReducer(combinedReducer, initalState);\n  const previousState = React.useRef(initalState);\n  React.useEffect(() => {\n    previousState.current = nextState;\n  }, [previousState, nextState]);\n  useStateChangeDetection(nextState, previousState.current, propsRef, actionRef);\n  return [getControlledState(nextState, propsRef.current), dispatch];\n}"],"mappings":";AAAA,OAAOA,QAAQ,MAAM,oCAAoC;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAOC,cAAc,MAAM,yBAAyB;;AAEpD;AACA;AACA;AACA;AACA,SAASC,kBAAkBA,CAACC,aAAa,EAAEC,KAAK,EAAE;EAChD,IAAIA,KAAK,CAACC,KAAK,KAAKC,SAAS,EAAE;IAC7B,OAAOP,QAAQ,CAAC,CAAC,CAAC,EAAEI,aAAa,EAAE;MACjCI,aAAa,EAAEH,KAAK,CAACC;IACvB,CAAC,CAAC;EACJ;EACA,OAAOF,aAAa;AACtB;AACA,SAASK,eAAeA,CAACC,OAAO,EAAEC,OAAO,EAAEC,cAAc,EAAE;EACzD,IAAIF,OAAO,KAAKC,OAAO,EAAE;IACvB,OAAO,IAAI;EACb;EACA,IAAID,OAAO,KAAK,IAAI,IAAIC,OAAO,KAAK,IAAI,EAAE;IACxC,OAAO,KAAK;EACd;EACA,OAAOC,cAAc,CAACF,OAAO,EAAEC,OAAO,CAAC;AACzC;;AAEA;AACA;AACA;AACA,SAASE,uBAAuBA,CAACC,SAAS,EAAEC,qBAAqB,EAAEC,QAAQ,EAAEC,aAAa,EAAE;EAC1FhB,KAAK,CAACiB,SAAS,CAAC,YAAM;IACpB,IAAI,CAACF,QAAQ,CAACG,OAAO,IAAIF,aAAa,CAACE,OAAO,KAAK,IAAI,EAAE;MACvD;MACA;IACF;IACA,IAAMC,aAAa,GAAGjB,kBAAkB,CAACY,qBAAqB,EAAEC,QAAQ,CAACG,OAAO,CAAC;IACjF,IAAAE,kBAAA,GAGIL,QAAQ,CAACG,OAAO;MAFlBG,QAAQ,GAAAD,kBAAA,CAARC,QAAQ;MACRV,cAAc,GAAAS,kBAAA,CAAdT,cAAc;IAEhB,IAAIU,QAAQ,EAAE;MACZ,IAAIC,qBAAqB;MACzB,IAAMC,sBAAsB,GAAG,CAACD,qBAAqB,GAAGH,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACZ,aAAa,KAAK,IAAI,GAAGe,qBAAqB,GAAG,EAAE;MAC1J,IAAME,kBAAkB,GAAGX,SAAS,CAACN,aAAa;MAClD,IAAMkB,QAAQ,GAAGV,QAAQ,CAACG,OAAO,CAACO,QAAQ;MAC1C,IAAI,CAACxB,cAAc,CAACuB,kBAAkB,EAAED,sBAAsB,EAAEZ,cAAc,CAAC,EAAE;QAC/Ec,QAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,QAAQ,CAACT,aAAa,CAACE,OAAO,CAACQ,KAAK,EAAEF,kBAAkB,CAAC;MACvF;IACF,CAAC,MAAM;MACL,IAAMG,qBAAqB,GAAGR,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACZ,aAAa;MAC1F,IAAMqB,iBAAiB,GAAGf,SAAS,CAACN,aAAa;MACjD,IAAMkB,SAAQ,GAAGV,QAAQ,CAACG,OAAO,CAACO,QAAQ;MAC1C,IAAI,CAACjB,eAAe,CAACoB,iBAAiB,EAAED,qBAAqB,EAAEhB,cAAc,CAAC,EAAE;QAC9Ec,SAAQ,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,SAAQ,CAACT,aAAa,CAACE,OAAO,CAACQ,KAAK,EAAEE,iBAAiB,CAAC;MACtF;IACF;;IAEA;IACA,IAAI,CAACpB,eAAe,CAACM,qBAAqB,CAACe,gBAAgB,EAAEhB,SAAS,CAACgB,gBAAgB,EAAEd,QAAQ,CAACG,OAAO,CAACP,cAAc,CAAC,EAAE;MACzH,IAAImB,iBAAiB,EAAEC,qBAAqB;MAC5C,CAACD,iBAAiB,GAAGf,QAAQ,CAACG,OAAO,KAAK,IAAI,GAAG,KAAK,CAAC,GAAG,CAACa,qBAAqB,GAAGD,iBAAiB,CAACE,iBAAiB,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGD,qBAAqB,CAACE,IAAI,CAACH,iBAAiB,EAAEd,aAAa,CAACE,OAAO,CAACQ,KAAK,EAAEb,SAAS,CAACgB,gBAAgB,CAAC;IACnP;IACAb,aAAa,CAACE,OAAO,GAAG,IAAI;EAC9B,CAAC,EAAE,CAACL,SAAS,CAACN,aAAa,EAAEM,SAAS,CAACgB,gBAAgB,EAAEf,qBAAqB,EAAEC,QAAQ,EAAEC,aAAa,CAAC,CAAC;AAC3G;AACA,eAAe,SAASkB,sBAAsBA,CAACC,eAAe,EAAEC,eAAe,EAAEhC,KAAK,EAAE;EACtF,IAAIiC,IAAI;EACR,IACEhC,KAAK,GAEHD,KAAK,CAFPC,KAAK;IACLiC,YAAY,GACVlC,KAAK,CADPkC,YAAY;EAEd,IAAMvB,QAAQ,GAAGf,KAAK,CAACuC,MAAM,CAACnC,KAAK,CAAC;EACpCW,QAAQ,CAACG,OAAO,GAAGd,KAAK;EACxB,IAAMoC,SAAS,GAAGxC,KAAK,CAACuC,MAAM,CAAC,IAAI,CAAC;EACpC,IAAME,oBAAoB,GAAG,CAACJ,IAAI,GAAGhC,KAAK,KAAKC,SAAS,GAAGgC,YAAY,GAAGjC,KAAK,KAAK,IAAI,GAAGgC,IAAI,GAAGjC,KAAK,CAACiB,QAAQ,GAAG,EAAE,GAAG,IAAI;EAC5H,IAAMqB,WAAW,GAAG;IAClBb,gBAAgB,EAAE,IAAI;IACtBtB,aAAa,EAAEkC;EACjB,CAAC;EACD,IAAME,eAAe,GAAG3C,KAAK,CAAC4C,WAAW,CAAC,UAACC,KAAK,EAAEC,MAAM,EAAK;IAC3DN,SAAS,CAACtB,OAAO,GAAG4B,MAAM;IAC1B,IAAIV,eAAe,EAAE;MACnB,OAAOA,eAAe,CAAClC,kBAAkB,CAAC2C,KAAK,EAAE9B,QAAQ,CAACG,OAAO,CAAC,EAAE4B,MAAM,CAAC;IAC7E;IACA,OAAOX,eAAe,CAACjC,kBAAkB,CAAC2C,KAAK,EAAE9B,QAAQ,CAACG,OAAO,CAAC,EAAE4B,MAAM,CAAC;EAC7E,CAAC,EAAE,CAACV,eAAe,EAAED,eAAe,EAAEpB,QAAQ,CAAC,CAAC;EAChD,IAAAgC,iBAAA,GAA8B/C,KAAK,CAACgD,UAAU,CAACL,eAAe,EAAED,WAAW,CAAC;IAAAO,kBAAA,GAAAC,cAAA,CAAAH,iBAAA;IAArElC,SAAS,GAAAoC,kBAAA;IAAEE,QAAQ,GAAAF,kBAAA;EAC1B,IAAM9B,aAAa,GAAGnB,KAAK,CAACuC,MAAM,CAACG,WAAW,CAAC;EAC/C1C,KAAK,CAACiB,SAAS,CAAC,YAAM;IACpBE,aAAa,CAACD,OAAO,GAAGL,SAAS;EACnC,CAAC,EAAE,CAACM,aAAa,EAAEN,SAAS,CAAC,CAAC;EAC9BD,uBAAuB,CAACC,SAAS,EAAEM,aAAa,CAACD,OAAO,EAAEH,QAAQ,EAAEyB,SAAS,CAAC;EAC9E,OAAO,CAACtC,kBAAkB,CAACW,SAAS,EAAEE,QAAQ,CAACG,OAAO,CAAC,EAAEiC,QAAQ,CAAC;AACpE"},"metadata":{},"sourceType":"module","externalDependencies":[]}
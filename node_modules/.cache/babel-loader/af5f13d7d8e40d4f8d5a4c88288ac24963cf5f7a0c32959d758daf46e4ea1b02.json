{"ast":null,"code":"import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\nfunction defaultEasing(values, easing) {\n  return values.map(function () {\n    return easing || easeInOut;\n  }).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n  var numValues = values.length;\n  return values.map(function (_value, i) {\n    return i !== 0 ? i / (numValues - 1) : 0;\n  });\n}\nfunction convertOffsetToTimes(offset, duration) {\n  return offset.map(function (o) {\n    return o * duration;\n  });\n}\nfunction keyframes(_ref) {\n  var _ref$from = _ref.from,\n    from = _ref$from === void 0 ? 0 : _ref$from,\n    _ref$to = _ref.to,\n    to = _ref$to === void 0 ? 1 : _ref$to,\n    ease = _ref.ease,\n    offset = _ref.offset,\n    _ref$duration = _ref.duration,\n    duration = _ref$duration === void 0 ? 300 : _ref$duration;\n  /**\n   * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n   * to reduce GC during animation.\n   */\n  var state = {\n    done: false,\n    value: from\n  };\n  /**\n   * Convert values to an array if they've been given as from/to options\n   */\n  var values = Array.isArray(to) ? to : [from, to];\n  /**\n   * Create a times array based on the provided 0-1 offsets\n   */\n  var times = convertOffsetToTimes(\n  // Only use the provided offsets if they're the correct length\n  // TODO Maybe we should warn here if there's a length mismatch\n  offset && offset.length === values.length ? offset : defaultOffset(values), duration);\n  function createInterpolator() {\n    return interpolate(times, values, {\n      ease: Array.isArray(ease) ? ease : defaultEasing(values, ease)\n    });\n  }\n  var interpolator = createInterpolator();\n  return {\n    next: function next(t) {\n      state.value = interpolator(t);\n      state.done = t >= duration;\n      return state;\n    },\n    flipTarget: function flipTarget() {\n      values.reverse();\n      interpolator = createInterpolator();\n    }\n  };\n}\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };","map":{"version":3,"names":["easeInOut","interpolate","defaultEasing","values","easing","map","splice","length","defaultOffset","numValues","_value","i","convertOffsetToTimes","offset","duration","o","keyframes","_ref","_ref$from","from","_ref$to","to","ease","_ref$duration","state","done","value","Array","isArray","times","createInterpolator","interpolator","next","t","flipTarget","reverse"],"sources":["C:/Users/Prajwal/Desktop/crypto-dashboard-dec/node_modules/framer-motion/dist/es/animation/legacy-popmotion/keyframes.mjs"],"sourcesContent":["import { easeInOut } from '../../easing/ease.mjs';\nimport { interpolate } from '../../utils/interpolate.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction defaultOffset(values) {\n    const numValues = values.length;\n    return values.map((_value, i) => i !== 0 ? i / (numValues - 1) : 0);\n}\nfunction convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\nfunction keyframes({ from = 0, to = 1, ease, offset, duration = 300, }) {\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: from };\n    /**\n     * Convert values to an array if they've been given as from/to options\n     */\n    const values = Array.isArray(to) ? to : [from, to];\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const times = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    offset && offset.length === values.length\n        ? offset\n        : defaultOffset(values), duration);\n    function createInterpolator() {\n        return interpolate(times, values, {\n            ease: Array.isArray(ease) ? ease : defaultEasing(values, ease),\n        });\n    }\n    let interpolator = createInterpolator();\n    return {\n        next: (t) => {\n            state.value = interpolator(t);\n            state.done = t >= duration;\n            return state;\n        },\n        flipTarget: () => {\n            values.reverse();\n            interpolator = createInterpolator();\n        },\n    };\n}\n\nexport { convertOffsetToTimes, defaultEasing, defaultOffset, keyframes };\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,uBAAuB;AACjD,SAASC,WAAW,QAAQ,6BAA6B;AAEzD,SAASC,aAAaA,CAACC,MAAM,EAAEC,MAAM,EAAE;EACnC,OAAOD,MAAM,CAACE,GAAG,CAAC;IAAA,OAAMD,MAAM,IAAIJ,SAAS;EAAA,EAAC,CAACM,MAAM,CAAC,CAAC,EAAEH,MAAM,CAACI,MAAM,GAAG,CAAC,CAAC;AAC7E;AACA,SAASC,aAAaA,CAACL,MAAM,EAAE;EAC3B,IAAMM,SAAS,GAAGN,MAAM,CAACI,MAAM;EAC/B,OAAOJ,MAAM,CAACE,GAAG,CAAC,UAACK,MAAM,EAAEC,CAAC;IAAA,OAAKA,CAAC,KAAK,CAAC,GAAGA,CAAC,IAAIF,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC;EAAA,EAAC;AACvE;AACA,SAASG,oBAAoBA,CAACC,MAAM,EAAEC,QAAQ,EAAE;EAC5C,OAAOD,MAAM,CAACR,GAAG,CAAC,UAACU,CAAC;IAAA,OAAKA,CAAC,GAAGD,QAAQ;EAAA,EAAC;AAC1C;AACA,SAASE,SAASA,CAAAC,IAAA,EAAsD;EAAA,IAAAC,SAAA,GAAAD,IAAA,CAAnDE,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAG,CAAC,GAAAA,SAAA;IAAAE,OAAA,GAAAH,IAAA,CAAEI,EAAE;IAAFA,EAAE,GAAAD,OAAA,cAAG,CAAC,GAAAA,OAAA;IAAEE,IAAI,GAAAL,IAAA,CAAJK,IAAI;IAAET,MAAM,GAAAI,IAAA,CAANJ,MAAM;IAAAU,aAAA,GAAAN,IAAA,CAAEH,QAAQ;IAARA,QAAQ,GAAAS,aAAA,cAAG,GAAG,GAAAA,aAAA;EAC/D;AACJ;AACA;AACA;EACI,IAAMC,KAAK,GAAG;IAAEC,IAAI,EAAE,KAAK;IAAEC,KAAK,EAAEP;EAAK,CAAC;EAC1C;AACJ;AACA;EACI,IAAMhB,MAAM,GAAGwB,KAAK,CAACC,OAAO,CAACP,EAAE,CAAC,GAAGA,EAAE,GAAG,CAACF,IAAI,EAAEE,EAAE,CAAC;EAClD;AACJ;AACA;EACI,IAAMQ,KAAK,GAAGjB,oBAAoB;EAClC;EACA;EACAC,MAAM,IAAIA,MAAM,CAACN,MAAM,KAAKJ,MAAM,CAACI,MAAM,GACnCM,MAAM,GACNL,aAAa,CAACL,MAAM,CAAC,EAAEW,QAAQ,CAAC;EACtC,SAASgB,kBAAkBA,CAAA,EAAG;IAC1B,OAAO7B,WAAW,CAAC4B,KAAK,EAAE1B,MAAM,EAAE;MAC9BmB,IAAI,EAAEK,KAAK,CAACC,OAAO,CAACN,IAAI,CAAC,GAAGA,IAAI,GAAGpB,aAAa,CAACC,MAAM,EAAEmB,IAAI;IACjE,CAAC,CAAC;EACN;EACA,IAAIS,YAAY,GAAGD,kBAAkB,CAAC,CAAC;EACvC,OAAO;IACHE,IAAI,EAAE,SAAAA,KAACC,CAAC,EAAK;MACTT,KAAK,CAACE,KAAK,GAAGK,YAAY,CAACE,CAAC,CAAC;MAC7BT,KAAK,CAACC,IAAI,GAAGQ,CAAC,IAAInB,QAAQ;MAC1B,OAAOU,KAAK;IAChB,CAAC;IACDU,UAAU,EAAE,SAAAA,WAAA,EAAM;MACd/B,MAAM,CAACgC,OAAO,CAAC,CAAC;MAChBJ,YAAY,GAAGD,kBAAkB,CAAC,CAAC;IACvC;EACJ,CAAC;AACL;AAEA,SAASlB,oBAAoB,EAAEV,aAAa,EAAEM,aAAa,EAAEQ,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import _slicedToArray from \"C:/Users/Prajwal/Desktop/crypto-dashboard-dec/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"BackdropProps\"],\n  _excluded2 = [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"];\nimport * as React from 'react';\nimport { flushSync } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { useThemeProps } from '@mui/system';\nimport { NoSsr } from '@mui/base';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport useForkRef from '../utils/useForkRef';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow';\nimport useEventCallback from '../utils/useEventCallback';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport SwipeArea from './SwipeArea';\n\n// This value is closed to what browsers are using internally to\n// trigger a native scroll.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar UNCERTAINTY_THRESHOLD = 3; // px\n\n// This is the part of the drawer displayed on touch start.\nvar DRAG_STARTED_SIGNAL = 20; // px\n\n// We can only have one instance at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\nvar claimedSwipeInstance = null;\n\n// Exported for test purposes.\nexport function reset() {\n  claimedSwipeInstance = null;\n}\nfunction calculateCurrentX(anchor, touches, doc) {\n  return anchor === 'right' ? doc.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\nfunction calculateCurrentY(anchor, touches, containerWindow) {\n  return anchor === 'bottom' ? containerWindow.innerHeight - touches[0].clientY : touches[0].clientY;\n}\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\n/**\n * @param {Element | null} element\n * @param {Element} rootNode\n */\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  var domTreeShapes = [];\n  while (element && element !== rootNode.parentElement) {\n    var style = ownerWindow(rootNode).getComputedStyle(element);\n    if (\n    // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' ||\n    // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      // noop\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n    element = element.parentElement;\n  }\n  return domTreeShapes;\n}\n\n/**\n * @param {object} param0\n * @param {ReturnType<getDomTreeShapes>} param0.domTreeShapes\n */\nfunction computeHasNativeHandler(_ref) {\n  var domTreeShapes = _ref.domTreeShapes,\n    start = _ref.start,\n    current = _ref.current,\n    anchor = _ref.anchor;\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  var axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(function (shape) {\n    // Determine if we are going backward or forward.\n    var goingForward = current >= start;\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n    var axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    var scrollPosition = Math.round(shape[axisProperties.scrollPosition[axis]]);\n    var areNotAtStart = scrollPosition > 0;\n    var areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return true;\n    }\n    return false;\n  });\n}\nvar iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nvar SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  var props = useThemeProps({\n    name: 'MuiSwipeableDrawer',\n    props: inProps\n  });\n  var theme = useTheme();\n  var transitionDurationDefault = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  var _props$anchor = props.anchor,\n    anchor = _props$anchor === void 0 ? 'left' : _props$anchor,\n    _props$disableBackdro = props.disableBackdropTransition,\n    disableBackdropTransition = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n    _props$disableDiscove = props.disableDiscovery,\n    disableDiscovery = _props$disableDiscove === void 0 ? false : _props$disableDiscove,\n    _props$disableSwipeTo = props.disableSwipeToOpen,\n    disableSwipeToOpen = _props$disableSwipeTo === void 0 ? iOS : _props$disableSwipeTo,\n    hideBackdrop = props.hideBackdrop,\n    _props$hysteresis = props.hysteresis,\n    hysteresis = _props$hysteresis === void 0 ? 0.52 : _props$hysteresis,\n    _props$minFlingVeloci = props.minFlingVelocity,\n    minFlingVelocity = _props$minFlingVeloci === void 0 ? 450 : _props$minFlingVeloci,\n    _props$ModalProps = props.ModalProps;\n  _props$ModalProps = _props$ModalProps === void 0 ? {} : _props$ModalProps;\n  var BackdropProps = _props$ModalProps.BackdropProps,\n    onClose = props.onClose,\n    onOpen = props.onOpen,\n    _props$open = props.open,\n    open = _props$open === void 0 ? false : _props$open,\n    _props$PaperProps = props.PaperProps,\n    PaperProps = _props$PaperProps === void 0 ? {} : _props$PaperProps,\n    SwipeAreaProps = props.SwipeAreaProps,\n    _props$swipeAreaWidth = props.swipeAreaWidth,\n    swipeAreaWidth = _props$swipeAreaWidth === void 0 ? 20 : _props$swipeAreaWidth,\n    _props$transitionDura = props.transitionDuration,\n    transitionDuration = _props$transitionDura === void 0 ? transitionDurationDefault : _props$transitionDura,\n    _props$variant = props.variant,\n    variant = _props$variant === void 0 ? 'temporary' : _props$variant,\n    ModalPropsProp = _objectWithoutPropertiesLoose(props.ModalProps, _excluded),\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  var _React$useState = React.useState(false),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    maybeSwiping = _React$useState2[0],\n    setMaybeSwiping = _React$useState2[1];\n  var swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  var swipeAreaRef = React.useRef();\n  var backdropRef = React.useRef();\n  var paperRef = React.useRef();\n  var handleRef = useForkRef(PaperProps.ref, paperRef);\n  var touchDetected = React.useRef(false);\n\n  // Ref for transition duration based on / to match swipe speed\n  var calculatedDurationRef = React.useRef();\n\n  // Use a ref so the open value used is always up to date inside useCallback.\n  useEnhancedEffect(function () {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  var setPosition = React.useCallback(function (translate) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var _options$mode = options.mode,\n      mode = _options$mode === void 0 ? null : _options$mode,\n      _options$changeTransi = options.changeTransition,\n      changeTransition = _options$changeTransi === void 0 ? true : _options$changeTransi;\n    var anchorRtl = getAnchor(theme, anchor);\n    var rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    var horizontalSwipe = isHorizontal(anchor);\n    var transform = horizontalSwipe ? \"translate(\".concat(rtlTranslateMultiplier * translate, \"px, 0)\") : \"translate(0, \".concat(rtlTranslateMultiplier * translate, \"px)\");\n    var drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    var transition = '';\n    if (mode) {\n      transition = theme.transitions.create('all', getTransitionProps({\n        easing: undefined,\n        style: undefined,\n        timeout: transitionDuration\n      }, {\n        mode: mode\n      }));\n    }\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n    if (!disableBackdropTransition && !hideBackdrop) {\n      var backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  var handleBodyTouchEnd = useEventCallback(function (nativeEvent) {\n    if (!touchDetected.current) {\n      return;\n    }\n    claimedSwipeInstance = null;\n    touchDetected.current = false;\n    flushSync(function () {\n      setMaybeSwiping(false);\n    });\n\n    // The swipe wasn't started.\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n    swipeInstance.current.isSwiping = null;\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontal = isHorizontal(anchor);\n    var current;\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, nativeEvent.changedTouches, ownerDocument(nativeEvent.currentTarget));\n    } else {\n      current = calculateCurrentY(anchorRtl, nativeEvent.changedTouches, ownerWindow(nativeEvent.currentTarget));\n    }\n    var startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    var maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    var currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    var translateRatio = currentTranslate / maxTranslate;\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n      return;\n    }\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  var handleBodyTouchMove = useEventCallback(function (nativeEvent) {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    }\n\n    // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n    if (claimedSwipeInstance !== null && claimedSwipeInstance !== swipeInstance.current) {\n      return;\n    }\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, ownerDocument(nativeEvent.currentTarget));\n    var currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, ownerWindow(nativeEvent.currentTarget));\n    if (open && paperRef.current.contains(nativeEvent.target) && claimedSwipeInstance === null) {\n      var domTreeShapes = getDomTreeShapes(nativeEvent.target, paperRef.current);\n      var hasNativeHandler = computeHasNativeHandler({\n        domTreeShapes: domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor: anchor\n      });\n      if (hasNativeHandler) {\n        claimedSwipeInstance = true;\n        return;\n      }\n      claimedSwipeInstance = swipeInstance.current;\n    }\n\n    // We don't know yet.\n    if (swipeInstance.current.isSwiping == null) {\n      var dx = Math.abs(currentX - swipeInstance.current.startX);\n      var dy = Math.abs(currentY - swipeInstance.current.startY);\n      var definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n      if (definitelySwiping && nativeEvent.cancelable) {\n        nativeEvent.preventDefault();\n      }\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(nativeEvent);\n          return;\n        }\n\n        // Shift the starting point.\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n\n        // Compensate for the part of the drawer displayed on touch start.\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= DRAG_STARTED_SIGNAL;\n          } else {\n            swipeInstance.current.startY -= DRAG_STARTED_SIGNAL;\n          }\n        }\n      }\n    }\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n    var maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    var startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n    var translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        var paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n    var velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3;\n\n    // Low Pass filter.\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now();\n\n    // We are swiping, let's prevent the scroll event on iOS.\n    if (nativeEvent.cancelable) {\n      nativeEvent.preventDefault();\n    }\n    setPosition(translate);\n  });\n  var handleBodyTouchStart = useEventCallback(function (nativeEvent) {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    // We can only have one node at the time claiming ownership for handling the swipe.\n    if (nativeEvent.defaultMuiPrevented) {\n      return;\n    }\n\n    // At least one element clogs the drawer interaction zone.\n    if (open && (hideBackdrop || !backdropRef.current.contains(nativeEvent.target)) && !paperRef.current.contains(nativeEvent.target)) {\n      return;\n    }\n    var anchorRtl = getAnchor(theme, anchor);\n    var horizontalSwipe = isHorizontal(anchor);\n    var currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, ownerDocument(nativeEvent.currentTarget));\n    var currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, ownerWindow(nativeEvent.currentTarget));\n    if (!open) {\n      if (disableSwipeToOpen || nativeEvent.target !== swipeAreaRef.current) {\n        return;\n      }\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n    nativeEvent.defaultMuiPrevented = true;\n    claimedSwipeInstance = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    flushSync(function () {\n      setMaybeSwiping(true);\n    });\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 15 : -DRAG_STARTED_SIGNAL), {\n        changeTransition: false\n      });\n    }\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(function () {\n    if (variant === 'temporary') {\n      var doc = ownerDocument(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart);\n      // A blocking listener prevents Firefox's navbar to auto-hide on scroll.\n      // It only needs to prevent scrolling on the drawer's content when open.\n      // When closed, the overlay prevents scrolling.\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: !open\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return function () {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: !open\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n    return undefined;\n  }, [variant, open, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(function () {\n    return function () {\n      // We need to release the lock.\n      if (claimedSwipeInstance === swipeInstance.current) {\n        claimedSwipeInstance = null;\n      }\n    };\n  }, []);\n  React.useEffect(function () {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(Drawer, _extends({\n      open: variant === 'temporary' && maybeSwiping ? true : open,\n      variant: variant,\n      ModalProps: _extends({\n        BackdropProps: _extends({}, BackdropProps, {\n          ref: backdropRef\n        })\n      }, variant === 'temporary' && {\n        keepMounted: true\n      }, ModalPropsProp),\n      hideBackdrop: hideBackdrop,\n      PaperProps: _extends({}, PaperProps, {\n        style: _extends({\n          pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n        }, PaperProps.style),\n        ref: handleRef\n      }),\n      anchor: anchor,\n      transitionDuration: calculatedDurationRef.current || transitionDuration,\n      onClose: onClose,\n      ref: ref\n    }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/_jsx(NoSsr, {\n      children: /*#__PURE__*/_jsx(SwipeArea, _extends({\n        anchor: anchor,\n        ref: swipeAreaRef,\n        width: swipeAreaWidth\n      }, SwipeAreaProps))\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  anchor: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   * @default false\n   */\n  disableBackdropTransition: PropTypes.bool,\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   * @default false\n   */\n  disableDiscovery: PropTypes.bool,\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)\n   */\n  disableSwipeToOpen: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  hideBackdrop: PropTypes.bool,\n  /**\n   * Affects how far the drawer must be opened/closed to change its state.\n   * Specified as percent (0-1) of the width of the drawer\n   * @default 0.52\n   */\n  hysteresis: PropTypes.number,\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   * @default 450\n   */\n  minFlingVelocity: PropTypes.number,\n  /**\n   * @ignore\n   */\n  ModalProps: PropTypes /* @typescript-to-proptypes-ignore */.shape({\n    BackdropProps: PropTypes.shape({\n      component: elementTypeAcceptingRef\n    })\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func.isRequired,\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func.isRequired,\n  /**\n   * If `true`, the component is shown.\n   * @default false\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes /* @typescript-to-proptypes-ignore */.shape({\n    component: elementTypeAcceptingRef,\n    style: PropTypes.object\n  }),\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: PropTypes.object,\n  /**\n   * The width of the left most (or right most) area in `px` that\n   * the drawer can be swiped open from.\n   * @default 20\n   */\n  swipeAreaWidth: PropTypes.number,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * @ignore\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default SwipeableDrawer;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","_excluded","_excluded2","React","flushSync","PropTypes","elementTypeAcceptingRef","useThemeProps","NoSsr","Drawer","getAnchor","isHorizontal","useForkRef","ownerDocument","ownerWindow","useEventCallback","useEnhancedEffect","useTheme","getTransitionProps","SwipeArea","jsx","_jsx","jsxs","_jsxs","UNCERTAINTY_THRESHOLD","DRAG_STARTED_SIGNAL","claimedSwipeInstance","reset","calculateCurrentX","anchor","touches","doc","body","offsetWidth","pageX","calculateCurrentY","containerWindow","innerHeight","clientY","getMaxTranslate","horizontalSwipe","paperInstance","clientWidth","clientHeight","getTranslate","currentTranslate","startLocation","open","maxTranslate","Math","min","max","getDomTreeShapes","element","rootNode","domTreeShapes","parentElement","style","getComputedStyle","getPropertyValue","scrollWidth","scrollHeight","push","computeHasNativeHandler","_ref","start","current","axisProperties","scrollPosition","x","y","scrollLength","clientLength","some","shape","goingForward","axis","round","areNotAtStart","areNotAtEnd","iOS","navigator","test","userAgent","SwipeableDrawer","forwardRef","inProps","ref","props","name","theme","transitionDurationDefault","enter","transitions","duration","enteringScreen","exit","leavingScreen","_props$anchor","_props$disableBackdro","disableBackdropTransition","_props$disableDiscove","disableDiscovery","_props$disableSwipeTo","disableSwipeToOpen","hideBackdrop","_props$hysteresis","hysteresis","_props$minFlingVeloci","minFlingVelocity","_props$ModalProps","ModalProps","BackdropProps","onClose","onOpen","_props$open","_props$PaperProps","PaperProps","SwipeAreaProps","_props$swipeAreaWidth","swipeAreaWidth","_props$transitionDura","transitionDuration","_props$variant","variant","ModalPropsProp","other","_React$useState","useState","_React$useState2","_slicedToArray","maybeSwiping","setMaybeSwiping","swipeInstance","useRef","isSwiping","swipeAreaRef","backdropRef","paperRef","handleRef","touchDetected","calculatedDurationRef","setPosition","useCallback","translate","options","arguments","length","undefined","_options$mode","mode","_options$changeTransi","changeTransition","anchorRtl","rtlTranslateMultiplier","indexOf","transform","concat","drawerStyle","webkitTransform","transition","create","easing","timeout","webkitTransition","backdropStyle","opacity","handleBodyTouchEnd","nativeEvent","horizontal","changedTouches","currentTarget","startX","startY","translateRatio","abs","velocity","handleBodyTouchMove","currentX","currentY","contains","target","hasNativeHandler","dx","dy","definitelySwiping","cancelable","preventDefault","paperHit","lastTranslate","lastTime","performance","now","handleBodyTouchStart","defaultPrevented","defaultMuiPrevented","useEffect","addEventListener","passive","removeEventListener","Fragment","children","keepMounted","pointerEvents","width","process","env","NODE_ENV","propTypes","oneOf","node","bool","number","component","func","isRequired","object","oneOfType","appear"],"sources":["C:/Users/Prajwal/Desktop/crypto-dashboard-dec/node_modules/@mui/material/SwipeableDrawer/SwipeableDrawer.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"BackdropProps\"],\n  _excluded2 = [\"anchor\", \"disableBackdropTransition\", \"disableDiscovery\", \"disableSwipeToOpen\", \"hideBackdrop\", \"hysteresis\", \"minFlingVelocity\", \"ModalProps\", \"onClose\", \"onOpen\", \"open\", \"PaperProps\", \"SwipeAreaProps\", \"swipeAreaWidth\", \"transitionDuration\", \"variant\"];\nimport * as React from 'react';\nimport { flushSync } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { elementTypeAcceptingRef } from '@mui/utils';\nimport { useThemeProps } from '@mui/system';\nimport { NoSsr } from '@mui/base';\nimport Drawer, { getAnchor, isHorizontal } from '../Drawer/Drawer';\nimport useForkRef from '../utils/useForkRef';\nimport ownerDocument from '../utils/ownerDocument';\nimport ownerWindow from '../utils/ownerWindow';\nimport useEventCallback from '../utils/useEventCallback';\nimport useEnhancedEffect from '../utils/useEnhancedEffect';\nimport useTheme from '../styles/useTheme';\nimport { getTransitionProps } from '../transitions/utils';\nimport SwipeArea from './SwipeArea';\n\n// This value is closed to what browsers are using internally to\n// trigger a native scroll.\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst UNCERTAINTY_THRESHOLD = 3; // px\n\n// This is the part of the drawer displayed on touch start.\nconst DRAG_STARTED_SIGNAL = 20; // px\n\n// We can only have one instance at the time claiming ownership for handling the swipe.\n// Otherwise, the UX would be confusing.\n// That's why we use a singleton here.\nlet claimedSwipeInstance = null;\n\n// Exported for test purposes.\nexport function reset() {\n  claimedSwipeInstance = null;\n}\nfunction calculateCurrentX(anchor, touches, doc) {\n  return anchor === 'right' ? doc.body.offsetWidth - touches[0].pageX : touches[0].pageX;\n}\nfunction calculateCurrentY(anchor, touches, containerWindow) {\n  return anchor === 'bottom' ? containerWindow.innerHeight - touches[0].clientY : touches[0].clientY;\n}\nfunction getMaxTranslate(horizontalSwipe, paperInstance) {\n  return horizontalSwipe ? paperInstance.clientWidth : paperInstance.clientHeight;\n}\nfunction getTranslate(currentTranslate, startLocation, open, maxTranslate) {\n  return Math.min(Math.max(open ? startLocation - currentTranslate : maxTranslate + startLocation - currentTranslate, 0), maxTranslate);\n}\n\n/**\n * @param {Element | null} element\n * @param {Element} rootNode\n */\nfunction getDomTreeShapes(element, rootNode) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L129\n  const domTreeShapes = [];\n  while (element && element !== rootNode.parentElement) {\n    const style = ownerWindow(rootNode).getComputedStyle(element);\n    if (\n    // Ignore the scroll children if the element is absolute positioned.\n    style.getPropertyValue('position') === 'absolute' ||\n    // Ignore the scroll children if the element has an overflowX hidden\n    style.getPropertyValue('overflow-x') === 'hidden') {\n      // noop\n    } else if (element.clientWidth > 0 && element.scrollWidth > element.clientWidth || element.clientHeight > 0 && element.scrollHeight > element.clientHeight) {\n      // Ignore the nodes that have no width.\n      // Keep elements with a scroll\n      domTreeShapes.push(element);\n    }\n    element = element.parentElement;\n  }\n  return domTreeShapes;\n}\n\n/**\n * @param {object} param0\n * @param {ReturnType<getDomTreeShapes>} param0.domTreeShapes\n */\nfunction computeHasNativeHandler({\n  domTreeShapes,\n  start,\n  current,\n  anchor\n}) {\n  // Adapted from https://github.com/oliviertassinari/react-swipeable-views/blob/7666de1dba253b896911adf2790ce51467670856/packages/react-swipeable-views/src/SwipeableViews.js#L175\n  const axisProperties = {\n    scrollPosition: {\n      x: 'scrollLeft',\n      y: 'scrollTop'\n    },\n    scrollLength: {\n      x: 'scrollWidth',\n      y: 'scrollHeight'\n    },\n    clientLength: {\n      x: 'clientWidth',\n      y: 'clientHeight'\n    }\n  };\n  return domTreeShapes.some(shape => {\n    // Determine if we are going backward or forward.\n    let goingForward = current >= start;\n    if (anchor === 'top' || anchor === 'left') {\n      goingForward = !goingForward;\n    }\n    const axis = anchor === 'left' || anchor === 'right' ? 'x' : 'y';\n    const scrollPosition = Math.round(shape[axisProperties.scrollPosition[axis]]);\n    const areNotAtStart = scrollPosition > 0;\n    const areNotAtEnd = scrollPosition + shape[axisProperties.clientLength[axis]] < shape[axisProperties.scrollLength[axis]];\n    if (goingForward && areNotAtEnd || !goingForward && areNotAtStart) {\n      return true;\n    }\n    return false;\n  });\n}\nconst iOS = typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent);\nconst SwipeableDrawer = /*#__PURE__*/React.forwardRef(function SwipeableDrawer(inProps, ref) {\n  const props = useThemeProps({\n    name: 'MuiSwipeableDrawer',\n    props: inProps\n  });\n  const theme = useTheme();\n  const transitionDurationDefault = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen\n  };\n  const {\n      anchor = 'left',\n      disableBackdropTransition = false,\n      disableDiscovery = false,\n      disableSwipeToOpen = iOS,\n      hideBackdrop,\n      hysteresis = 0.52,\n      minFlingVelocity = 450,\n      ModalProps: {\n        BackdropProps\n      } = {},\n      onClose,\n      onOpen,\n      open = false,\n      PaperProps = {},\n      SwipeAreaProps,\n      swipeAreaWidth = 20,\n      transitionDuration = transitionDurationDefault,\n      variant = 'temporary'\n    } = props,\n    ModalPropsProp = _objectWithoutPropertiesLoose(props.ModalProps, _excluded),\n    other = _objectWithoutPropertiesLoose(props, _excluded2);\n  const [maybeSwiping, setMaybeSwiping] = React.useState(false);\n  const swipeInstance = React.useRef({\n    isSwiping: null\n  });\n  const swipeAreaRef = React.useRef();\n  const backdropRef = React.useRef();\n  const paperRef = React.useRef();\n  const handleRef = useForkRef(PaperProps.ref, paperRef);\n  const touchDetected = React.useRef(false);\n\n  // Ref for transition duration based on / to match swipe speed\n  const calculatedDurationRef = React.useRef();\n\n  // Use a ref so the open value used is always up to date inside useCallback.\n  useEnhancedEffect(() => {\n    calculatedDurationRef.current = null;\n  }, [open]);\n  const setPosition = React.useCallback((translate, options = {}) => {\n    const {\n      mode = null,\n      changeTransition = true\n    } = options;\n    const anchorRtl = getAnchor(theme, anchor);\n    const rtlTranslateMultiplier = ['right', 'bottom'].indexOf(anchorRtl) !== -1 ? 1 : -1;\n    const horizontalSwipe = isHorizontal(anchor);\n    const transform = horizontalSwipe ? `translate(${rtlTranslateMultiplier * translate}px, 0)` : `translate(0, ${rtlTranslateMultiplier * translate}px)`;\n    const drawerStyle = paperRef.current.style;\n    drawerStyle.webkitTransform = transform;\n    drawerStyle.transform = transform;\n    let transition = '';\n    if (mode) {\n      transition = theme.transitions.create('all', getTransitionProps({\n        easing: undefined,\n        style: undefined,\n        timeout: transitionDuration\n      }, {\n        mode\n      }));\n    }\n    if (changeTransition) {\n      drawerStyle.webkitTransition = transition;\n      drawerStyle.transition = transition;\n    }\n    if (!disableBackdropTransition && !hideBackdrop) {\n      const backdropStyle = backdropRef.current.style;\n      backdropStyle.opacity = 1 - translate / getMaxTranslate(horizontalSwipe, paperRef.current);\n      if (changeTransition) {\n        backdropStyle.webkitTransition = transition;\n        backdropStyle.transition = transition;\n      }\n    }\n  }, [anchor, disableBackdropTransition, hideBackdrop, theme, transitionDuration]);\n  const handleBodyTouchEnd = useEventCallback(nativeEvent => {\n    if (!touchDetected.current) {\n      return;\n    }\n    claimedSwipeInstance = null;\n    touchDetected.current = false;\n    flushSync(() => {\n      setMaybeSwiping(false);\n    });\n\n    // The swipe wasn't started.\n    if (!swipeInstance.current.isSwiping) {\n      swipeInstance.current.isSwiping = null;\n      return;\n    }\n    swipeInstance.current.isSwiping = null;\n    const anchorRtl = getAnchor(theme, anchor);\n    const horizontal = isHorizontal(anchor);\n    let current;\n    if (horizontal) {\n      current = calculateCurrentX(anchorRtl, nativeEvent.changedTouches, ownerDocument(nativeEvent.currentTarget));\n    } else {\n      current = calculateCurrentY(anchorRtl, nativeEvent.changedTouches, ownerWindow(nativeEvent.currentTarget));\n    }\n    const startLocation = horizontal ? swipeInstance.current.startX : swipeInstance.current.startY;\n    const maxTranslate = getMaxTranslate(horizontal, paperRef.current);\n    const currentTranslate = getTranslate(current, startLocation, open, maxTranslate);\n    const translateRatio = currentTranslate / maxTranslate;\n    if (Math.abs(swipeInstance.current.velocity) > minFlingVelocity) {\n      // Calculate transition duration to match swipe speed\n      calculatedDurationRef.current = Math.abs((maxTranslate - currentTranslate) / swipeInstance.current.velocity) * 1000;\n    }\n    if (open) {\n      if (swipeInstance.current.velocity > minFlingVelocity || translateRatio > hysteresis) {\n        onClose();\n      } else {\n        // Reset the position, the swipe was aborted.\n        setPosition(0, {\n          mode: 'exit'\n        });\n      }\n      return;\n    }\n    if (swipeInstance.current.velocity < -minFlingVelocity || 1 - translateRatio > hysteresis) {\n      onOpen();\n    } else {\n      // Reset the position, the swipe was aborted.\n      setPosition(getMaxTranslate(horizontal, paperRef.current), {\n        mode: 'enter'\n      });\n    }\n  });\n  const handleBodyTouchMove = useEventCallback(nativeEvent => {\n    // the ref may be null when a parent component updates while swiping\n    if (!paperRef.current || !touchDetected.current) {\n      return;\n    }\n\n    // We are not supposed to handle this touch move because the swipe was started in a scrollable container in the drawer\n    if (claimedSwipeInstance !== null && claimedSwipeInstance !== swipeInstance.current) {\n      return;\n    }\n    const anchorRtl = getAnchor(theme, anchor);\n    const horizontalSwipe = isHorizontal(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, ownerDocument(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, ownerWindow(nativeEvent.currentTarget));\n    if (open && paperRef.current.contains(nativeEvent.target) && claimedSwipeInstance === null) {\n      const domTreeShapes = getDomTreeShapes(nativeEvent.target, paperRef.current);\n      const hasNativeHandler = computeHasNativeHandler({\n        domTreeShapes,\n        start: horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY,\n        current: horizontalSwipe ? currentX : currentY,\n        anchor\n      });\n      if (hasNativeHandler) {\n        claimedSwipeInstance = true;\n        return;\n      }\n      claimedSwipeInstance = swipeInstance.current;\n    }\n\n    // We don't know yet.\n    if (swipeInstance.current.isSwiping == null) {\n      const dx = Math.abs(currentX - swipeInstance.current.startX);\n      const dy = Math.abs(currentY - swipeInstance.current.startY);\n      const definitelySwiping = horizontalSwipe ? dx > dy && dx > UNCERTAINTY_THRESHOLD : dy > dx && dy > UNCERTAINTY_THRESHOLD;\n      if (definitelySwiping && nativeEvent.cancelable) {\n        nativeEvent.preventDefault();\n      }\n      if (definitelySwiping === true || (horizontalSwipe ? dy > UNCERTAINTY_THRESHOLD : dx > UNCERTAINTY_THRESHOLD)) {\n        swipeInstance.current.isSwiping = definitelySwiping;\n        if (!definitelySwiping) {\n          handleBodyTouchEnd(nativeEvent);\n          return;\n        }\n\n        // Shift the starting point.\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n\n        // Compensate for the part of the drawer displayed on touch start.\n        if (!disableDiscovery && !open) {\n          if (horizontalSwipe) {\n            swipeInstance.current.startX -= DRAG_STARTED_SIGNAL;\n          } else {\n            swipeInstance.current.startY -= DRAG_STARTED_SIGNAL;\n          }\n        }\n      }\n    }\n    if (!swipeInstance.current.isSwiping) {\n      return;\n    }\n    const maxTranslate = getMaxTranslate(horizontalSwipe, paperRef.current);\n    let startLocation = horizontalSwipe ? swipeInstance.current.startX : swipeInstance.current.startY;\n    if (open && !swipeInstance.current.paperHit) {\n      startLocation = Math.min(startLocation, maxTranslate);\n    }\n    const translate = getTranslate(horizontalSwipe ? currentX : currentY, startLocation, open, maxTranslate);\n    if (open) {\n      if (!swipeInstance.current.paperHit) {\n        const paperHit = horizontalSwipe ? currentX < maxTranslate : currentY < maxTranslate;\n        if (paperHit) {\n          swipeInstance.current.paperHit = true;\n          swipeInstance.current.startX = currentX;\n          swipeInstance.current.startY = currentY;\n        } else {\n          return;\n        }\n      } else if (translate === 0) {\n        swipeInstance.current.startX = currentX;\n        swipeInstance.current.startY = currentY;\n      }\n    }\n    if (swipeInstance.current.lastTranslate === null) {\n      swipeInstance.current.lastTranslate = translate;\n      swipeInstance.current.lastTime = performance.now() + 1;\n    }\n    const velocity = (translate - swipeInstance.current.lastTranslate) / (performance.now() - swipeInstance.current.lastTime) * 1e3;\n\n    // Low Pass filter.\n    swipeInstance.current.velocity = swipeInstance.current.velocity * 0.4 + velocity * 0.6;\n    swipeInstance.current.lastTranslate = translate;\n    swipeInstance.current.lastTime = performance.now();\n\n    // We are swiping, let's prevent the scroll event on iOS.\n    if (nativeEvent.cancelable) {\n      nativeEvent.preventDefault();\n    }\n    setPosition(translate);\n  });\n  const handleBodyTouchStart = useEventCallback(nativeEvent => {\n    // We are not supposed to handle this touch move.\n    // Example of use case: ignore the event if there is a Slider.\n    if (nativeEvent.defaultPrevented) {\n      return;\n    }\n\n    // We can only have one node at the time claiming ownership for handling the swipe.\n    if (nativeEvent.defaultMuiPrevented) {\n      return;\n    }\n\n    // At least one element clogs the drawer interaction zone.\n    if (open && (hideBackdrop || !backdropRef.current.contains(nativeEvent.target)) && !paperRef.current.contains(nativeEvent.target)) {\n      return;\n    }\n    const anchorRtl = getAnchor(theme, anchor);\n    const horizontalSwipe = isHorizontal(anchor);\n    const currentX = calculateCurrentX(anchorRtl, nativeEvent.touches, ownerDocument(nativeEvent.currentTarget));\n    const currentY = calculateCurrentY(anchorRtl, nativeEvent.touches, ownerWindow(nativeEvent.currentTarget));\n    if (!open) {\n      if (disableSwipeToOpen || nativeEvent.target !== swipeAreaRef.current) {\n        return;\n      }\n      if (horizontalSwipe) {\n        if (currentX > swipeAreaWidth) {\n          return;\n        }\n      } else if (currentY > swipeAreaWidth) {\n        return;\n      }\n    }\n    nativeEvent.defaultMuiPrevented = true;\n    claimedSwipeInstance = null;\n    swipeInstance.current.startX = currentX;\n    swipeInstance.current.startY = currentY;\n    flushSync(() => {\n      setMaybeSwiping(true);\n    });\n    if (!open && paperRef.current) {\n      // The ref may be null when a parent component updates while swiping.\n      setPosition(getMaxTranslate(horizontalSwipe, paperRef.current) + (disableDiscovery ? 15 : -DRAG_STARTED_SIGNAL), {\n        changeTransition: false\n      });\n    }\n    swipeInstance.current.velocity = 0;\n    swipeInstance.current.lastTime = null;\n    swipeInstance.current.lastTranslate = null;\n    swipeInstance.current.paperHit = false;\n    touchDetected.current = true;\n  });\n  React.useEffect(() => {\n    if (variant === 'temporary') {\n      const doc = ownerDocument(paperRef.current);\n      doc.addEventListener('touchstart', handleBodyTouchStart);\n      // A blocking listener prevents Firefox's navbar to auto-hide on scroll.\n      // It only needs to prevent scrolling on the drawer's content when open.\n      // When closed, the overlay prevents scrolling.\n      doc.addEventListener('touchmove', handleBodyTouchMove, {\n        passive: !open\n      });\n      doc.addEventListener('touchend', handleBodyTouchEnd);\n      return () => {\n        doc.removeEventListener('touchstart', handleBodyTouchStart);\n        doc.removeEventListener('touchmove', handleBodyTouchMove, {\n          passive: !open\n        });\n        doc.removeEventListener('touchend', handleBodyTouchEnd);\n      };\n    }\n    return undefined;\n  }, [variant, open, handleBodyTouchStart, handleBodyTouchMove, handleBodyTouchEnd]);\n  React.useEffect(() => () => {\n    // We need to release the lock.\n    if (claimedSwipeInstance === swipeInstance.current) {\n      claimedSwipeInstance = null;\n    }\n  }, []);\n  React.useEffect(() => {\n    if (!open) {\n      setMaybeSwiping(false);\n    }\n  }, [open]);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(Drawer, _extends({\n      open: variant === 'temporary' && maybeSwiping ? true : open,\n      variant: variant,\n      ModalProps: _extends({\n        BackdropProps: _extends({}, BackdropProps, {\n          ref: backdropRef\n        })\n      }, variant === 'temporary' && {\n        keepMounted: true\n      }, ModalPropsProp),\n      hideBackdrop: hideBackdrop,\n      PaperProps: _extends({}, PaperProps, {\n        style: _extends({\n          pointerEvents: variant === 'temporary' && !open ? 'none' : ''\n        }, PaperProps.style),\n        ref: handleRef\n      }),\n      anchor: anchor,\n      transitionDuration: calculatedDurationRef.current || transitionDuration,\n      onClose: onClose,\n      ref: ref\n    }, other)), !disableSwipeToOpen && variant === 'temporary' && /*#__PURE__*/_jsx(NoSsr, {\n      children: /*#__PURE__*/_jsx(SwipeArea, _extends({\n        anchor: anchor,\n        ref: swipeAreaRef,\n        width: swipeAreaWidth\n      }, SwipeAreaProps))\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SwipeableDrawer.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * @ignore\n   */\n  anchor: PropTypes.oneOf(['bottom', 'left', 'right', 'top']),\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Disable the backdrop transition.\n   * This can improve the FPS on low-end devices.\n   * @default false\n   */\n  disableBackdropTransition: PropTypes.bool,\n  /**\n   * If `true`, touching the screen near the edge of the drawer will not slide in the drawer a bit\n   * to promote accidental discovery of the swipe gesture.\n   * @default false\n   */\n  disableDiscovery: PropTypes.bool,\n  /**\n   * If `true`, swipe to open is disabled. This is useful in browsers where swiping triggers\n   * navigation actions. Swipe to open is disabled on iOS browsers by default.\n   * @default typeof navigator !== 'undefined' && /iPad|iPhone|iPod/.test(navigator.userAgent)\n   */\n  disableSwipeToOpen: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  hideBackdrop: PropTypes.bool,\n  /**\n   * Affects how far the drawer must be opened/closed to change its state.\n   * Specified as percent (0-1) of the width of the drawer\n   * @default 0.52\n   */\n  hysteresis: PropTypes.number,\n  /**\n   * Defines, from which (average) velocity on, the swipe is\n   * defined as complete although hysteresis isn't reached.\n   * Good threshold is between 250 - 1000 px/s\n   * @default 450\n   */\n  minFlingVelocity: PropTypes.number,\n  /**\n   * @ignore\n   */\n  ModalProps: PropTypes /* @typescript-to-proptypes-ignore */.shape({\n    BackdropProps: PropTypes.shape({\n      component: elementTypeAcceptingRef\n    })\n  }),\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func.isRequired,\n  /**\n   * Callback fired when the component requests to be opened.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func.isRequired,\n  /**\n   * If `true`, the component is shown.\n   * @default false\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * @ignore\n   */\n  PaperProps: PropTypes /* @typescript-to-proptypes-ignore */.shape({\n    component: elementTypeAcceptingRef,\n    style: PropTypes.object\n  }),\n  /**\n   * The element is used to intercept the touch events on the edge.\n   */\n  SwipeAreaProps: PropTypes.object,\n  /**\n   * The width of the left most (or right most) area in `px` that\n   * the drawer can be swiped open from.\n   * @default 20\n   */\n  swipeAreaWidth: PropTypes.number,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: theme.transitions.duration.enteringScreen,\n   *   exit: theme.transitions.duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * @ignore\n   */\n  variant: PropTypes.oneOf(['permanent', 'persistent', 'temporary'])\n} : void 0;\nexport default SwipeableDrawer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}